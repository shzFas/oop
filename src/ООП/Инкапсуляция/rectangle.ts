class Rectangle1 {
    /* Обратится из вне не получится */
    /* Нижнее подчеркивание в название свойств в JS, TS означает то что свойство приватное */
    /* При этом чаще всего все свойства делают приватными за редким исключением */
    private _width; /* Ширина приватно */
    private _height /* Высота приватно */

    constructor(w: any, h: any) {
        this._width = w;
        this._height = h;
    }

    /* Чтобы получать доступ к этим свойствам */
    /* Создаются геттеры и сеттеры */
    /* В данном случае мы вернем только ширину прямоугольника, и можно изменять ее из вне */
    public get width() {
        return this._width
    }

    /* В случае с сеттером мы просто можем присвоить это значение либо сделать доп. действия */
    /* Ширина прямоугольника не может быть отрицательной */
    /* Если будет значение меньше 0, то тогда ширина будет равна 1 */
    /* В обратном случае будет полу */
    public set width(value){
        if(value <= 0) {
            this._width = 1;
        } else {
            this._width = value;
        }
    }

    calcArea() {
        return this._width * this._height;
    }
    
    calcPerimetr() {
        return(this._width + this._height) * 2;
    }

}

const rect1 = new Rectangle1(5, 15);
rect1.width = -2; /* Теперь я могу обращаться из вне */
console.log(rect1)