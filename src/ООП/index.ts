/* Например есть класс прямоугольник, у него есть 2 свойства это ширина и высота */

class Rectangle { /* Это класс */
    width; /* Свойство - ширина */
    height; /* Свойство - высота */

    /* Также у любого класса есть конструктор */
    /* Конструктор это специальный метод некоторый блок инструкций который вызывается при создании объекта */
    constructor(w: any, h: any) { /* Также может принимать в себя некоторые аргументы */
        this.width = w; /* Обычно в конструкторе свойствам объекта присваиваются какие то значения */
        this.height = h; /* В данном случае мы принимаем высоту и ширину прямоугольника */
    }

    calcArea() { /* Также есть метод с помощью которого можно посчитать площадь прямоугольника*/
        return this.width * this.height; /* Под this в данном случае, объект у которого будет вызван этот метод*/
    }

    calcPerimeter() { /* Есть еще 1 метод который считает периметр прямоугольника */
        return (this.width + this.height) * 2
    }

    /* Каждый класс может включать столько свойств и методов сколько потребуется */
    /* Но хорошей практикой является делать классы под конкретные задачи */
}

/* С помощью оператора new мы можем создать объект */
/* Объект это отдельный экземпляр класса */
/* Аргументами передаем, ширину = 5, и высоту = 15 и т.д. */
const rect = new Rectangle(5, 15)
const rect2 = new Rectangle(52, 1050) /* В данном примере прямоугольники обладают разной шириной и высотой */
const rect3 = new Rectangle(30, 502)

rect.calcArea() /* Метод который вернет площадь прямоугольника */
rect.calcPerimeter() /* Метод который вернет периметр прямоугольника */

/*
У созданного объекта мы можем вызвать соответсвующий метод который
вернет площадь объекта у которого мы вызвали этот метод
*/

/*
Из любого класса можно создать столько объектов сколько нам потребуется 
*/